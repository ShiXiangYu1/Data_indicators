# 多阶段构建 - 第一阶段：构建依赖
FROM python:3.9-slim as builder

WORKDIR /app

# 安装构建依赖
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc build-essential curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 安装项目依赖
COPY requirements.txt ./
RUN pip install --no-cache-dir --user -r requirements.txt

# 第二阶段：创建最终镜像
FROM python:3.9-slim

WORKDIR /app

# 添加curl用于健康检查
RUN apt-get update && \
    apt-get install -y --no-install-recommends curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 从构建阶段复制安装的依赖
COPY --from=builder /root/.local /root/.local

# 确保环境变量包含安装的依赖
ENV PATH=/root/.local/bin:$PATH

# 复制应用代码
COPY . /app/

# 设置健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:${PORT:-8000}/api/health || exit 1

# 创建日志目录
RUN mkdir -p /app/logs && chmod 777 /app/logs

# 暴露应用端口
EXPOSE ${PORT:-8000}

# 默认命令（会被docker-compose中的command覆盖）
CMD ["gunicorn", "-w", "4", "-b", "0.0.0.0:8000", "data_insight.api:create_app()"] 