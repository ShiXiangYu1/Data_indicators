apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-insight
  labels:
    app: data-insight
    service: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: data-insight
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: data-insight
        service: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      containers:
      - name: data-insight
        image: ${DOCKER_REGISTRY}/data-insight:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: PORT
          value: "8000"
        - name: WORKERS
          value: "2"
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: data-insight-config
              key: environment
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: data-insight-config
              key: log_level
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: data-insight-secrets
              key: redis_url
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
      volumes:
      - name: config-volume
        configMap:
          name: data-insight-config
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: data-insight
  labels:
    app: data-insight
    service: api
spec:
  selector:
    app: data-insight
  ports:
  - port: 80
    targetPort: 8000
    name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: data-insight
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
  - host: api.data-insight.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: data-insight
            port:
              number: 80
  tls:
  - hosts:
    - api.data-insight.example.com
    secretName: data-insight-tls 