name: 数据指标分析系统 CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint:
    name: 代码检查
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 isort mypy
          pip install -r requirements.txt
      
      - name: 运行Flake8
        run: flake8 data_insight
      
      - name: 运行Black检查
        run: black --check data_insight
      
      - name: 运行isort检查
        run: isort --check-only --profile black data_insight
      
      - name: 运行Mypy类型检查
        run: mypy data_insight

  test:
    name: 单元测试
    needs: lint
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
    
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: 运行测试
        run: |
          pytest --cov=data_insight tests/
      
      - name: 上传覆盖率报告
        uses: codecov/codecov-action@v3

  build:
    name: 构建Docker镜像
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: 登录到容器仓库
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: 提取元数据
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_REGISTRY }}/data-insight-api
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
      
      - name: 构建并推送镜像
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: 部署到环境
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: 确定部署环境
        id: deploy-env
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "环境: production"
            echo "ENV=production" >> $GITHUB_ENV
          else
            echo "环境: staging"
            echo "ENV=staging" >> $GITHUB_ENV
          fi
      
      - name: 部署到Kubernetes
        uses: actions/setup-node@v3  # 使用Node环境运行部署脚本
        with:
          node-version: '16'
      
      - uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
      
      - name: 部署到Kubernetes
        uses: azure/k8s-deploy@v4
        with:
          namespace: data-insight-${{ env.ENV }}
          manifests: |
            k8s/${{ env.ENV }}/deployment.yaml
            k8s/${{ env.ENV }}/service.yaml
            k8s/${{ env.ENV }}/ingress.yaml
          images: |
            ${{ secrets.DOCKER_REGISTRY }}/data-insight-api:${{ github.sha }}
          strategy: canary
          percentage: 20
          connection-string: ${{ secrets.AZURE_CREDENTIALS }} 